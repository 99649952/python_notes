闭包
def func(arg):
    def wrapper():
        return arg * arg
    return wrapper

面向切面编程aop与装饰器
装饰器是一个很著名的设计模式，经常被用于有切面需求的场景。
较为经典的有插入日志、性能测试、事务处理等。
有了装饰器，我们就可以抽离出大量函数中与函数功能本身无关的雷同代码并继续重用。
概括的讲，装饰器的作用就是为已经存在的对象添加额外的功能。
其实就是一个函数，将共有功能抽离出来，优雅的为函数添加功能，且不用修改调用方式。
