try和except子句
try:
  int(raw_input("Please enter a number: "))
except ValueError:
  print "That was no valid number."
先执行try子句
try子句异常执行except子句

else子句
try:
    f = open('myfile.txt')
except IOError as e:
    print "I/O error({0}): {1}".format(e.errno, e.strerror)
else:
    f.close()
没有触发异常执行else子句内容

finally子句
try:
    i = int('11111')
    i = i + '1'
except ValueError:
    print "Could not convert data to an integer."
except TypeError:
    print "unsupported operand type(s) for +: 'int' and 'str'"
except Exception as e:
    print 'An unknown error', e
finally:
    print 'I always execute'
依次检测异常，只触发最先检测到的异常。
finally不管是否遇到异常总会执行,常用于起立操作，如关闭文件句柄， 关闭数据库连接

主动触发异常
raise NameError('HiThere')

自定义异常类
内建异常，就是python自己定义的异常，当內建异常不够用时，用户自定义异常，

class UnknownError(Exception): # 需继承Exception类
    def __init__(self, message):
        self.message = message  1

    def __str__(self): # 定义的返回错误信息
        return repr("unknown %s" % self.message)
