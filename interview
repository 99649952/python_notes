python可变对象和不可变对象
python中，strings, tuples, 和numbers是不可更改的对象，
而 list, dict, set 等则是可以修改的对象。
具体表现在不可变对象已经创建，对象不可更改，具体表现为对象本身没有对象外提供改变的方法。
可变对象创建完成，可直接通过其本身的方法如list就有方法可供增删改查，str却没有。

Python中单下划线和双下划线
__xxx__()一种约定,Python内部的名字,用来区别其他用户自定义的命名,以防冲突，就是例如__init__(),__del__(),__call__()这些特殊方法
_xxx:一种约定,用来指定变量私有.不能用from module import * 导入，其他方面和正常变量一样访问
__xxx:表示变量私有不被继承，不能调用(其实能被调用)。

*args and **kwargs有什么作用。常见应用场景。
在不确定参数和关键字参数个数，不要为了自己写代码方便而滥用。
易读（名字和参数无需解释）
易改（添加新的关键字参数不会破坏代码的其他部分）
强烈推荐去使用看下requests源码

面向切面编程AOP和装饰器
装饰器是一个很著名的设计模式，经常被用于有切面需求的场景，较为经典的有插入日志、性能测试、事务处理等。

__new__和__init__的区别
__new__是一个静态方法,而__init__是一个实例方法.
__new__方法会返回一个创建的实例,而__init__什么都不返回.
只有在__new__返回一个cls的实例时后面的__init__才能被调用.
当创建一个新实例时调用__new__,初始化一个实例时用__init__.

