class Person(object):
	def __init__(self, first_name, last_name, age, country='China'):
		self.first_name = first_name
		self.last_name = last_name
		self.__age = age
		self.country = country
		
	def show_info(self):
		print """
		name:		%s
		age:  		%s
		country:	%s
		""" %(self.name, self.age, self.country)

定义类
属性
方法
封装
实例化类
获取属性和使用方法
修改属性
私有属性
		
class Man(Person):
	def __init__(self, name, age, country='China'):
		super(Man).__init__(self, name, age, country)
		self.small_three_list = []
		self.strong = True
		
	def keep_small_three(self, **kw):
		self.small_three_list.append(kw)
		if len(kw) > 2:
			self.strong = False

子类
基类、父类、超类
super
继承
多态

class Woman(Person):
	def __init__(self, name, age, country='China')
		super(Man).__init__(self, name, age, country)
		self.shopping_trolley = []
	
	def buy(self, *someting):
		self.shopping_trolley.extend(someting)
		
class Baby(Man, Woman):
	pass

类方法和静态方法
class MyClass(object):
    @classmethod
    def class_test(cls):
        pass
    @staticmethod
    def static_test():
        pass

多继承
深度优先和广度优先
type
isinstance
dir
hasattr
getattr

property
一些特殊的方法：
__slots__
__str__
__iter__
__getitem__
__getattr__
__call__
__del__
__new__
元类
动态的给对象绑定方法




	